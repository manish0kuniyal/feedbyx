name: Build & Deploy (S3 + CloudFront)

on:
  push:
    branches:
      - main
      - staging

permissions:
  contents: read

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    name: Build (client/) and deploy to S3 + CloudFront

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Show client/ files (debug)
        run: |
          echo "Listing repo root:"
          ls -la
          echo "Listing client/:"
          ls -la client || true
          echo "Show lock files (repo root and client/):"
          ls -la package-lock.json || true
          ls -la client/package-lock.json || true

      - name: Setup Node.js (and cache npm deps using client/package-lock.json)
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          # point cache to the lockfile inside client/
          cache-dependency-path: client/package-lock.json

      - name: Install dependencies (client)
        working-directory: client
        run: npm ci

      - name: Build (client) â€” inject Vite env vars
        working-directory: client
        env:
          CI: false
          VITE_BASE_URL: ${{ secrets.VITE_BASE_URL }}
          VITE_GOOGLE_CLIENT_ID: ${{ secrets.VITE_GOOGLE_CLIENT_ID }}
        run: npm run build

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Deploy to S3 (production)
        if: github.ref == 'refs/heads/main'
        env:
          BUCKET: ${{ secrets.S3_BUCKET_PROD }}
          DIST_ID: ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID_PROD }}
        run: |
          echo "Deploying branch $GITHUB_REF to S3 bucket: $BUCKET"
          aws s3 sync client/build s3://$BUCKET --delete --acl bucket-owner-full-control
          if [ -f "client/build/index.html" ]; then
            aws s3 cp client/build/index.html s3://$BUCKET/index.html \
              --metadata-directive REPLACE \
              --cache-control "no-cache, no-store, must-revalidate" \
              --acl bucket-owner-full-control
          fi
          if [ -n "$DIST_ID" ]; then
            aws cloudfront create-invalidation --distribution-id $DIST_ID --paths "/*"
          fi

      - name: Deploy to S3 (staging)
        if: github.ref == 'refs/heads/staging'
        env:
          BUCKET: ${{ secrets.S3_BUCKET_STAGING }}
          DIST_ID: ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID_STAGING }}
        run: |
          echo "Deploying branch $GITHUB_REF to S3 bucket: $BUCKET"
          aws s3 sync client/build s3://$BUCKET --delete --acl bucket-owner-full-control
          if [ -f "client/build/index.html" ]; then
            aws s3 cp client/build/index.html s3://$BUCKET/index.html \
              --metadata-directive REPLACE \
              --cache-control "no-cache, no-store, must-revalidate" \
              --acl bucket-owner-full-control
          fi
          if [ -n "$DIST_ID" ]; then
            aws cloudfront create-invalidation --distribution-id $DIST_ID --paths "/*"
          fi
